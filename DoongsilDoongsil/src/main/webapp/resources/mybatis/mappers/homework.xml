<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="HomeworkMapper">

	<select id="selectHWList" resultType="t_homework">
		SELECT * FROM T_HOMEWORK ORDER BY THO_ID DESC
	</select>
	
	<select id="selectTHwithClass" parameterType="t_homework" resultType="t_homework">
		SELECT 
		    THO_ID, 
		    THO_TITLE, 
		    THO_WRITEDATE, 
		    THO_DEADLINE,
			THO_COUNT
		  FROM T_HOMEWORK
		  WHERE THO_CLASS = #{tho_class}
		    AND THO_GRADE = #{tho_grade}
		  ORDER BY THO_ID DESC
	</select>
	
	<select id="selectHWListFromFront" parameterType="doongsil.com.web.paging.model.PagingVo" resultType="t_homework">
		SELECT 
		    X.THO_ID,
			X.THO_WRITER,
			X.THO_GRADE,
			X.THO_CLASS,
			X.THO_TITLE, 
			X.THO_WRITEDATE,
    		X.THO_DEADLINE
		    FROM
		    (SELECT 
		        A.RN,
				A.THO_ID,
				A.THO_WRITER,
				A.THO_GRADE,
				A.THO_CLASS,
				A.THO_TITLE, 
				A.THO_WRITEDATE,
    			A.THO_DEADLINE
		         FROM
		        (SELECT ROW_NUMBER() OVER (ORDER BY B.THO_ID DESC) AS RN, 
					B.THO_ID,
				    B.THO_WRITER,
				    B.THO_GRADE,
				    B.THO_CLASS,
				    B.THO_TITLE, 
					B.THO_WRITEDATE,
    				B.THO_DEADLINE
		            FROM T_HOMEWORK B) A
		    WHERE RN <![CDATA[<=]]> #{end}) X
		WHERE X.RN <![CDATA[>=]]> #{start}
	</select>
	
	<select id="selectHWListFromEnd" parameterType="doongsil.com.web.paging.model.PagingVo" resultType="t_homework">
		SELECT 
		    *
		    FROM
		    (SELECT A.* FROM
		        (SELECT ROW_NUMBER() OVER (ORDER BY A.THO_ID DESC) AS RN, A.* 
		            FROM T_HOMEWORK A) A
		    WHERE RN <![CDATA[>=]]> #{start}) X
		WHERE X.RN <![CDATA[>=]]> #{end}
		
	</select>
	
	<select id="selectOneHW" parameterType="t_homework" resultType="t_homework">
		SELECT * FROM T_HOMEWORK
		<where>
			<choose>
				<when test="tho_id != 0">
					THO_ID = #{tho_id}
				</when>
				<when test="tho_id == 0">
					
					THO_WRITER = #{tho_writer} AND
					THO_GRADE = #{tho_grade} AND
					THO_CLASS = #{tho_class} AND
					THO_TITLE = #{tho_title} AND
					THO_CONTENTS = #{tho_contents} AND
					THO_HOMEWORKTYPE = #{tho_homeworktype} AND
					THO_WRITEDATE = #{tho_writedate}
					
				</when>
			</choose>	
		</where>
	</select>
	
	
	
	<select id="selectSHList" parameterType="s_homework" resultType="s_homework">
		SELECT * FROM S_HOMEWORK
			WHERE SHO_TID = #{sho_tid}
			ORDER BY SHO_ID DESC
	</select>
	
	<select id="selectOneSH" parameterType="s_homework" resultType="s_homework">
		SELECT * FROM S_HOMEWORK
		<where>
			<choose>
				<when test="sho_id != 0">
					SHO_ID = #{sho_id}
				</when>
				<when test="sho_id == 0">
					
					SHO_TID = #{sho_tid} AND
					SHO_WRITER = #{sho_writer} AND
					SHO_HOMEWORKTYPE = #{sho_homeworktype} AND
					SHO_GRADE = #{sho_grade} AND
					SHO_CLASS = #{sho_class} AND
					SHO_CONTENTS = #{sho_contents} AND
					SHO_DATE = #{sho_date}
					
				</when>
				<otherwise>
					1 = 1
				</otherwise>
			</choose>
		</where>
	</select>
	
	<select id="selectType3SH" parameterType="s_homework" resultType="s_homework">
		SELECT * FROM S_HOMEWORK WHERE
			SHO_TID = #{sho_tid} AND
			SHO_WRITER = #{sho_writer} AND
			SHO_DATE = #{sho_date}
	</select>
	
	<insert id="insertHW" parameterType="t_homework">
		INSERT INTO T_HOMEWORK
		<choose>
			<when test="tho_deadline == null and tho_filelink == null">
				(
					THO_ID,
					THO_WRITER,
					THO_GRADE,
					THO_CLASS,
					THO_TITLE,
					THO_CONTENTS,
					THO_HOMEWORKTYPE,
					THO_WRITEDATE,
					THO_COUNT
				) VALUES (
					T_HOMEWORK_SEQ.NEXTVAL,
					#{tho_writer},
					#{tho_grade},
					#{tho_class},
					#{tho_title},
					#{tho_contents},
					#{tho_homeworktype},
					#{tho_writedate},
					#{tho_count}
				)
			</when>
			<when test="tho_deadline != null and tho_filelink == null">
				(
					THO_ID,
					THO_WRITER,
					THO_GRADE,
					THO_CLASS,
					THO_TITLE,
					THO_CONTENTS,
					THO_HOMEWORKTYPE,
					THO_WRITEDATE,
					THO_DEADLINE,
					THO_COUNT
				) VALUES (
					T_HOMEWORK_SEQ.NEXTVAL,
					#{tho_writer},
					#{tho_grade},
					#{tho_class},
					#{tho_title},
					#{tho_contents},
					#{tho_homeworktype},
					#{tho_writedate},
					#{tho_deadline},
					#{tho_count}
				)
			</when>
			<when test="tho_deadline == null and tho_filelink != null">
				(
					THO_ID,
					THO_WRITER,
					THO_GRADE,
					THO_CLASS,
					THO_TITLE,
					THO_CONTENTS,
					THO_HOMEWORKTYPE,
					THO_WRITEDATE,
					THO_FILELINK,
					THO_COUNT
				) VALUES (
					T_HOMEWORK_SEQ.NEXTVAL,
					#{tho_writer},
					#{tho_grade},
					#{tho_class},
					#{tho_title},
					#{tho_contents},
					#{tho_homeworktype},
					#{tho_writedate},
					#{tho_filelink},
					#{tho_count}
				)
			</when>
			<otherwise>
				VALUES(
					T_HOMEWORK_SEQ.NEXTVAL,
					#{tho_writer},
					#{tho_grade},
					#{tho_class},
					#{tho_title},
					#{tho_contents},
					#{tho_homeworktype},
					#{tho_writedate},
					#{tho_deadline},
					#{tho_filelink},
					#{tho_count}
				)
			</otherwise>
		</choose>
	</insert>
	
	<insert id="insertSH" parameterType="s_homework">
		INSERT INTO S_HOMEWORK(
			<if test="sho_fileurl != null">
				SHO_FILEURL,
			</if>
			SHO_ID,
			SHO_TID,
			SHO_WRITER,
			SHO_HOMEWORKTYPE,
			SHO_GRADE,
			SHO_CLASS,
			SHO_CONTENTS,
			SHO_DATE
		) VALUES (
			<if test="sho_fileurl != null">
				#{sho_fileurl},
			</if>
			S_HOMEWORK_SEQ.NEXTVAL,
			#{sho_tid},
			#{sho_writer},
			#{sho_homeworktype},
			#{sho_grade},
			#{sho_class},
			#{sho_contents},
			#{sho_date}
		)
	</insert>
	
	<delete id="deleteHW" parameterType="t_homework">
		DELETE FROM T_HOMEWORK
			WHERE THO_ID = #{tho_id}
	</delete>
	
	<delete id="deleteSH" parameterType="s_homework">
		DELETE FROM S_HOMEWORK
			WHERE SHO_ID = #{sho_id}
	</delete>
	
	<update id="updateSHGoodbad" parameterType="s_homework">
		UPDATE S_HOMEWORK
			SET	SHO_GOODBAD = #{sho_goodbad}
			WHERE SHO_ID = #{sho_id}	
	</update>
	
	<update id="updateSHComment" parameterType="s_homework">
		UPDATE S_HOMEWORK
			SET	SHO_COMMENT = #{sho_comment}
			WHERE SHO_ID = #{sho_id}
	</update>
	
	<update id="updateTHCount" parameterType="t_homework">
		UPDATE T_HOMEWORK SET THO_COUNT = #{tho_count} WHERE THO_ID = #{tho_id}
	</update>
	
	<select id="selectTHOCategory" resultType="tho_category">
		SELECT * FROM THO_CATEGORY ORDER BY TCA_ID
	</select>
	
	<select id="selectStudentHWs" parameterType="s_homework" resultType="s_homework">
		SELECT * FROM S_HOMEWORK 
			WHERE SHO_WRITER = #{sho_writer} AND
				SHO_TID = #{sho_tid}
	</select>
	
	<select id="selectListCount" resultType="int">
		SELECT COUNT(*) AS TOTALCOUNT 
			FROM T_HOMEWORK
	</select>
	
	<update id="updateSHContents" parameterType="s_homework">
		UPDATE S_HOMEWORK
			SET	SHO_CONTENTS = #{sho_contents}
			WHERE SHO_ID = #{sho_id}
	</update>
	<!-- 학생용 내정보 페이지에 채점안된 숙제 불러오기 -->
	<select id="noCheckHomework" parameterType="int" resultType="s_homework">
		SELECT SHO_CONTENTS FROM S_HOMEWORK
		 WHERE SHO_GOODBAD is NULL
		   AND SHO_COMMENT is NULL
		   AND SHO_WRITER =#{id}
	</select>
	
</mapper>